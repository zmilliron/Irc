//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Irc.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Irc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have already joined {0}..
        /// </summary>
        public static string AlreadyJoinedChannel {
            get {
                return ResourceManager.GetString("AlreadyJoinedChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection has already been registered on the network..
        /// </summary>
        public static string AlreadyRegisteredExceptionMessage {
            get {
                return ResourceManager.GetString("AlreadyRegisteredExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ban exception list is full ({0})..
        /// </summary>
        public static string BanExceptionListAtCapacity {
            get {
                return ResourceManager.GetString("BanExceptionListAtCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ban list is full ({0})..
        /// </summary>
        public static string BanListAtCapacity {
            get {
                return ResourceManager.GetString("BanListAtCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel name is not in the correct format..
        /// </summary>
        public static string ChannelNameFormatError {
            get {
                return ResourceManager.GetString("ChannelNameFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel name must be less than {0} characters on this server..
        /// </summary>
        public static string ChannelNameTooLong {
            get {
                return ResourceManager.GetString("ChannelNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection is already open..
        /// </summary>
        public static string ConnectionAlreadyOpenError {
            get {
                return ResourceManager.GetString("ConnectionAlreadyOpenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***The connection to the server was lost..
        /// </summary>
        public static string ConnectionLost {
            get {
                return ResourceManager.GetString("ConnectionLost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transfer already in progress..
        /// </summary>
        public static string DccTransferInProgress {
            get {
                return ResourceManager.GetString("DccTransferInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I am currently away..
        /// </summary>
        public static string DefaultAwayMessage {
            get {
                return ResourceManager.GetString("DefaultAwayMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode string cannot contain duplicate entries for mode {0}..
        /// </summary>
        public static string DuplicateModeExceptionMessage {
            get {
                return ResourceManager.GetString("DuplicateModeExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The actual file size is larger than the file size claimed by the remote client..
        /// </summary>
        public static string FileTooLargeException {
            get {
                return ResourceManager.GetString("FileTooLargeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Friends list is not supported on this server..
        /// </summary>
        public static string FriendsListNotSupported {
            get {
                return ResourceManager.GetString("FriendsListNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore list is not supported on this server..
        /// </summary>
        public static string IgnoreListNotSupported {
            get {
                return ResourceManager.GetString("IgnoreListNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String &quot;{0}&quot; is not a valid nickname..
        /// </summary>
        public static string InvalidCastNickname {
            get {
                return ResourceManager.GetString("InvalidCastNickname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified uri was invalid.  A uri must be in one of the following forms:
        ///irc://&lt;host&gt;[:&lt;port&gt;]/[&lt;channel&gt;[?&lt;password&gt;]]
        ///irc6://&lt;host&gt;[:&lt;port&gt;]/[&lt;channel&gt;[?&lt;password&gt;]]
        ///ircs://&lt;host&gt;[:&lt;port&gt;]/[&lt;channel&gt;[?&lt;password&gt;]].
        /// </summary>
        public static string InvalidUriScheme {
            get {
                return ResourceManager.GetString("InvalidUriScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invitation exception list is at capacity ({0})..
        /// </summary>
        public static string InvitationExceptionListAtCapacity {
            get {
                return ResourceManager.GetString("InvitationExceptionListAtCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel invitations have been disabled..
        /// </summary>
        public static string InviteCommandDisabled {
            get {
                return ResourceManager.GetString("InviteCommandDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IRC message string not in the correct format..
        /// </summary>
        public static string IrcMessageFormatError {
            get {
                return ResourceManager.GetString("IrcMessageFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The KICK command has been disabled..
        /// </summary>
        public static string KickCommandDisabled {
            get {
                return ResourceManager.GetString("KickCommandDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Knocking is not supported on this server..
        /// </summary>
        public static string KnockNotSupported {
            get {
                return ResourceManager.GetString("KnockNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be greater than zero..
        /// </summary>
        public static string LessThanOneError {
            get {
                return ResourceManager.GetString("LessThanOneError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user with the specified nickname already exists..
        /// </summary>
        public static string NameAlreadyExistsError {
            get {
                return ResourceManager.GetString("NameAlreadyExistsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user with the specified nickname was not found..
        /// </summary>
        public static string NameNotFoundError {
            get {
                return ResourceManager.GetString("NameNotFoundError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be a negative number..
        /// </summary>
        public static string NegativeNumberError {
            get {
                return ResourceManager.GetString("NegativeNumberError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;New Server&gt;.
        /// </summary>
        public static string NewServer {
            get {
                return ResourceManager.GetString("NewServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nickname is not in the correct format..
        /// </summary>
        public static string NicknameFormatError {
            get {
                return ResourceManager.GetString("NicknameFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The nickname exceeds the maximum length allowed on this network..
        /// </summary>
        public static string NicknameTooLongError {
            get {
                return ResourceManager.GetString("NicknameTooLongError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection has not been established with a server..
        /// </summary>
        public static string NotConnectedMessage {
            get {
                return ResourceManager.GetString("NotConnectedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command cannot be sent until the connection has been registered..
        /// </summary>
        public static string NotRegisteredMessage {
            get {
                return ResourceManager.GetString("NotRegisteredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permission required to speak while moderated..
        /// </summary>
        public static string NotVoicedError {
            get {
                return ResourceManager.GetString("NotVoicedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nickname cannot be null..
        /// </summary>
        public static string NullNicknameError {
            get {
                return ResourceManager.GetString("NullNicknameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only registered users may speak in the channel..
        /// </summary>
        public static string OnlyRegisteredSpeakError {
            get {
                return ResourceManager.GetString("OnlyRegisteredSpeakError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel operator or half-operator status required..
        /// </summary>
        public static string OpOrHalfOpStatusRequired {
            get {
                return ResourceManager.GetString("OpOrHalfOpStatusRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel operator status required..
        /// </summary>
        public static string OpStatusRequired {
            get {
                return ResourceManager.GetString("OpStatusRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is not in the correct format..
        /// </summary>
        public static string PasswordFormatError {
            get {
                return ResourceManager.GetString("PasswordFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords must be less than 24 characters..
        /// </summary>
        public static string PasswordLengthError {
            get {
                return ResourceManager.GetString("PasswordLengthError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A port number must be between 1 and 65535..
        /// </summary>
        public static string PortOutOfRangeError {
            get {
                return ResourceManager.GetString("PortOutOfRangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconnection cancelled by user..
        /// </summary>
        public static string ReconnectCancelled {
            get {
                return ResourceManager.GetString("ReconnectCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***An error was encountered when reconnecting to the server:{0}{0}{1}.
        /// </summary>
        public static string ReconnectError {
            get {
                return ResourceManager.GetString("ReconnectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***Reconnecting....
        /// </summary>
        public static string Reconnecting {
            get {
                return ResourceManager.GetString("Reconnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ***Reconnecting in 10 seconds.
        /// </summary>
        public static string ReconnectingInTen {
            get {
                return ResourceManager.GetString("ReconnectingInTen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response string is not in the correct format..
        /// </summary>
        public static string ResponseFormatError {
            get {
                return ResourceManager.GetString("ResponseFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You don&apos;t need IRC to talk to yourself..
        /// </summary>
        public static string SelfMessageError {
            get {
                return ResourceManager.GetString("SelfMessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target is not a valid nickname or channel name..
        /// </summary>
        public static string TargetNameFormatError {
            get {
                return ResourceManager.GetString("TargetNameFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have reached the channel limit on this server ({0}).{1}{1}Leave a channel before joining a new one..
        /// </summary>
        public static string TooManyChannels {
            get {
                return ResourceManager.GetString("TooManyChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are more passwords supplied than channel names..
        /// </summary>
        public static string TooManyPasswords {
            get {
                return ResourceManager.GetString("TooManyPasswords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set by {0}.
        /// </summary>
        public static string TopicAuthorOnly {
            get {
                return ResourceManager.GetString("TopicAuthorOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set by {0} on {1}.
        /// </summary>
        public static string TopicInfo {
            get {
                return ResourceManager.GetString("TopicInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Topic information unavailable..
        /// </summary>
        public static string TopicInfoUnavailable {
            get {
                return ResourceManager.GetString("TopicInfoUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set on {0}.
        /// </summary>
        public static string TopicTimeOnly {
            get {
                return ResourceManager.GetString("TopicTimeOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must register your nickname first..
        /// </summary>
        public static string UnregisteredNicknameError {
            get {
                return ResourceManager.GetString("UnregisteredNicknameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified channel mode is not supported..
        /// </summary>
        public static string UnsupportedChannelModeExceptionMessage {
            get {
                return ResourceManager.GetString("UnsupportedChannelModeExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported channel modes: {0}.
        /// </summary>
        public static string UnsupportedChannelModes {
            get {
                return ResourceManager.GetString("UnsupportedChannelModes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified mode is not supported..
        /// </summary>
        public static string UnsupportedModeExceptionMessage {
            get {
                return ResourceManager.GetString("UnsupportedModeExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserIP command not supported by this server..
        /// </summary>
        public static string UserIPNotSupported {
            get {
                return ResourceManager.GetString("UserIPNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username is not in the correct format..
        /// </summary>
        public static string UserNameFormatError {
            get {
                return ResourceManager.GetString("UserNameFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified user was not found..
        /// </summary>
        public static string UserNotFound {
            get {
                return ResourceManager.GetString("UserNotFound", resourceCulture);
            }
        }
    }
}
